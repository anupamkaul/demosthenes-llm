check that the frozen model (except the final layers) is still able to operate on text as expected

Inputs: tensor([[5211,  345,  423,  640]])
Input dims: torch.Size([1, 4])
Output:  tensor([[[-1.5854,  0.9904],
         [-3.7235,  7.4548],
         [-2.2661,  6.6049],
         [-3.5983,  3.9902]]])
Output dims torch.Size([1, 4, 2])
last output token:  tensor([[-3.5983,  3.9902]])
Class label: 1
Class label: 1
[50256]
120
120
120
Input batch dimensions: torch.Size([8, 120])
Label batch dimensions torch.Size([8])
130 training batches
19 validation batches
38 test batches
130 training batches
19 validation batches
38 test batches
Training accuracy: 46.25%
Validation accuracy: 45.00%
Test accuracy: 48.75%
Training loss: 2.453
Validation loss: 2.583
Test loss: 2.322
Ep 1 (Step 000000): Train loss 2.153, Val loss 2.392
Ep 1 (Step 000050): Train loss 0.617, Val loss 0.637
Ep 1 (Step 000100): Train loss 0.523, Val loss 0.557
Training accuracy: 70.00% | Validation accuracy: 72.50%
Ep 2 (Step 000150): Train loss 0.561, Val loss 0.489
Ep 2 (Step 000200): Train loss 0.419, Val loss 0.397
Ep 2 (Step 000250): Train loss 0.409, Val loss 0.353
Training accuracy: 82.50% | Validation accuracy: 85.00%
Ep 3 (Step 000300): Train loss 0.333, Val loss 0.320
Ep 3 (Step 000350): Train loss 0.340, Val loss 0.306
Training accuracy: 90.00% | Validation accuracy: 90.00%
Ep 4 (Step 000400): Train loss 0.136, Val loss 0.200
Ep 4 (Step 000450): Train loss 0.153, Val loss 0.132
Ep 4 (Step 000500): Train loss 0.222, Val loss 0.137
Training accuracy: 100.00% | Validation accuracy: 97.50%
Ep 5 (Step 000550): Train loss 0.207, Val loss 0.143
Ep 5 (Step 000600): Train loss 0.083, Val loss 0.074
Training accuracy: 100.00% | Validation accuracy: 97.50%
Training completed in 17.83 minutes.
2025-10-21 16:00:48.858 python[25657:196785] The class 'NSSavePanel' overrides the method identifier.  This method is implemented by class 'NSWindow'
Training accuracy: 97.21%
Validation accuracy: 97.32%
Test accuracy: 95.67%
model saved!
